[
  {
    "Id": "698515",
    "ThreadId": "279537",
    "Html": "\r\n<p>Since I use Robocopy rather frequently, I took a look at this. &nbsp;Even though I really like the idea and the long filename support, I have some concerns about this and how to use it. &nbsp;The biggest issue I see is that you are writing this as if it\r\n were a command line tool instead of a Powershell function/script. &nbsp;I've wanted a Powershell version of robocopy a long time, but this is a implementation of the original robocopy without most of the&nbsp;benefits&nbsp;of Powershell. &nbsp;</p>\r\n<p>Here are some of my main concerns:</p>\r\n<ol>\r\n<li>Named Parameters - Tab completion can then give you the list of parameters: Copy-RoboPower -&lt;TAB&gt; &nbsp;to get a list of options.\r\n<ol>\r\n<li>Instead of /S use -Recurse\r\n<ol>\r\n<li>Implementing this could be done using the following in the Param section of the function: [Parameter()][switch]$Recurse\r\n</li></ol>\r\n</li><li>Instead of /E use -Recurse plus -IncludeEmptyFolders </li><li>Instead of /L use -ListOnly </li></ol>\r\n</li><li>Use a module for this to improve readability and maintainability.\r\n<ol>\r\n<li>Put 1 function per file and reference it in your .psm1 module file\r\n<ol>\r\n<li>.&nbsp;&nbsp;$PSScriptRoot\\cleanupVariables.ps1 </li><li>.&nbsp;&nbsp;$PSScriptRoot\\isFileLocked.ps1 </li></ol>\r\n</li><li>Put C# code in .cs file and reference it the same way in add-type\r\n<ol>\r\n<li>Add-Type -Path &quot;$PSScriptRoot\\RoboPowerCopyInfo.cs&quot; &nbsp;-ErrorAction SilentlyContinue -ReferencedAssemblies &quot;Microsoft.VisualBasic&quot; -Language CSharp -IgnoreWarnings\r\n</li></ol>\r\n</li><li>Only export functions needed by the end user from the module so they don't see all the other functions\r\n</li></ol>\r\n</li><li>Use PowerShell Verb-Noun naming for functions that are visible outside of the module\r\n<ol>\r\n<li>Copy-RoboPower </li></ol>\r\n</li><li>Inline function help - see &quot;help about_comment_based_help&quot; to get started.&nbsp;This allows you to do things like:\r\n<ol>\r\n<li>help Copy-RoboPower -Parameter Source </li><li>help Copy-RoboPower -Full </li></ol>\r\n</li></ol>\r\n<p>These suggestions would make RoboPowerCopy much more appealing to PowerShell users and make it fit in better with the PowerShell model. &nbsp;Hope this helps some and I wish you good luck with this project. &nbsp;It would be a good tool to have.</p>\r\n",
    "PostedDate": "2011-11-15T09:21:55.757-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]